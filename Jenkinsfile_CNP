#!groovy

@Library("Infrastructure")

def type = "java"
def product = "enforcement"
def component = "api"

def secrets = [
  'enforcement-${env}': [
    secret('enforcement-api-s2s-secret', 'ENFORCEMENT_API_S2S_SECRET'),
    secret('govnotify-test-key', 'ENFORCEMENT_NOTIFY_API_KEY')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withPipeline(type, product, component) {
  onPR() {
    setPreviewEnvVars()
//    afterSuccess('smoketest:preview') {
//      runE2eTests(env.ENVIRONMENT)
//    }
  }
  env.IDAM_S2S_AUTH_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  loadVaultSecrets(secrets)

  afterAlways('functionalTest:preview') {
    archiveFunctionalTestReports()
  }

  afterAlways('functionalTest:aat') {
    archiveFunctionalTestReports()
  }
}

def setPreviewEnvVars() {
  // TODO: Update URL to include XUI when available
  env.TEST_E2E_URL_WEB = "https://enforcement-api-pr-${CHANGE_ID}.preview.platform.hmcts.net"
  env.ENVIRONMENT= "preview"
}

def archiveFunctionalTestReports() {
  publishHTML([
    allowMissing         : true,
    alwaysLinkToLastBuild: true,
    keepAll              : true,
    reportDir            : "report-for-functional-tests",
    reportFiles          : 'index.html',
    reportName           : 'API Functional Test Report'
  ])

  archiveArtifacts allowEmptyArchive: true, artifacts: '**/report-for-functional-tests/*'
}
