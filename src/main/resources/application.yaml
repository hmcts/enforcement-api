server:
  port: 4550
  shutdown: "graceful"

# If you use a database then uncomment the `group:, readiness: and include: "db"` lines in the health probes and uncomment the datasource section
management:
  endpoint:
    health:
      show-details: "always"
      # group:
      #  readiness:
      #   include: "db"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.demo.controllers
  writer-with-order-by-keys: true

security:
  anonymousPaths:
    - "/health"
    - "/health/liveness"
    - "/health/readiness"
    - "/swagger-ui.html"
    - "/swagger-ui/**"
    - "/v3/api-docs/**"

spring:
  config:
    import: "optional:configtree:/mnt/secrets/rpe/"
  application:
    name: Spring Boot Template
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true

idam:
  s2s-auth:
    url: ${IDAM_S2S_AUTH_URL:http://localhost:4502}
    totp_secret: ${ENFORCEMENT_API_S2S_SECRET:AAAAAAAAAAAAAAAA}
    microservice: ${S2S_SERVICE_NAME:enforcement_api}
  s2s-authorised:
    services: ${S2S_NAMES_WHITELIST:enforcement_api,pcs_api,pcs_frontend}

azure:
  application-insights:
    instrumentation-key: ${rpe.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}
